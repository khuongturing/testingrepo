# Generated by Django 2.2.3 on 2019-07-28 22:29

import apps.users.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('orders', '0002_auto_20190728_2229'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', apps.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_card', models.TextField(blank=True, null=True, verbose_name='Credit Card')),
                ('address_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('address_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Another Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('day_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Day Phone')),
                ('eve_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Evening Phone')),
                ('mob_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mobile Phone')),
                ('shipping_region', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='orders.ShippingRegion')),
            ],
            options={
                'db_table': 'customer',
            },
            bases=('users.user',),
            managers=[
                ('objects', apps.users.managers.CustomerManager()),
            ],
        ),
    ]
